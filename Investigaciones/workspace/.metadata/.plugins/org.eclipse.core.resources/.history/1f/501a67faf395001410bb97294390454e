package com.example.karaokeapp;

import java.io.BufferedWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;

import android.os.Bundle;
import android.app.Activity;
import android.content.Context;
import android.view.Menu;
import android.view.View;
import android.widget.EditText;
import android.widget.Toast;

public class Test extends Activity {
	private Socket socket;
	    private static final int SERVERPORT = 8888;
	    private static final String SERVER_IP = "192.168.1.52";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_test);
        
        new Thread(new BuscarServer()).start();

    }
    private Boolean encontrado = false;
    private String ipTemporal = "";
    class IntentarConectar implements Runnable 
    {
        @Override
        public void run() 
        {
	        String ip = (String)ipTemporal;
	        try
	        {
	        	InetAddress serverAddr = InetAddress.getByName("192.168.1.80");
	        	if(ip.equals("192.168.1.80")) 
	        	{
	        		int i = 0;
	        		i++;
	        	}
	            Socket socket = new Socket(serverAddr, SERVERPORT);
	            encontrado = true;
	        }
	        catch(Exception ex) 
	        { 
	        	String as = ex.getMessage();
	        	int i = 0;
        		i++;
	        }
        }
    }
    class BuscarServer implements Runnable
    {
    	@Override
        public void run() 
    	{
	        for (int i = 0; i < 255; i++)
	        {
	        	ipTemporal = "192.168.1." + i;
	            Thread intento = new Thread(new IntentarConectar());
	            intento.start();
	            try {
					Thread.sleep(500);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
	            if (encontrado)
	            {
	                if(intento.isAlive())
	                    intento.suspend();
	                try {
    	                InetAddress serverAddr = InetAddress.getByName(ipTemporal);
    	                socket = new Socket(serverAddr, SERVERPORT);
    	                socket.setReceiveBufferSize(10025);
    	                socket.setSendBufferSize(10025);
    	            } catch (UnknownHostException e1) {
    	                e1.printStackTrace();
    	            } catch (IOException e1) {
    	                e1.printStackTrace();
    	            }
	                Mensaje("Conexión exitosa!!");
	                
	                break;
	            }
	                
	        }
	        Mensaje("No encontrado!!");
    	}
    }
    public void Mensaje(String texto)
    {
    	Context context = getApplicationContext();
        CharSequence text = texto;
        int duration = Toast.LENGTH_SHORT;

        Toast toast = Toast.makeText(context, text, duration);
        toast.show();
    }
    public void onClick(View view) {
    	        try {
    	        	String valor = "";
    	        	switch (view.getId()) {
    	            case  R.id.b1: {
    	            	valor = "1";
    	                break;
    	            	}
    	            case  R.id.b2: {
    	            	valor = "2";
    	                break;
    	            	}
    	            case  R.id.b3: {
    	            	valor = "3";
    	                break;
    	            	}
    	            case  R.id.b4: {
    	            	valor = "4";
    	                break;
    	            	}
    	            case  R.id.b5: {
    	            	valor = "5";
    	                break;
    	            	}
    	            case  R.id.b6: {
    	            	valor = "6";
    	                break;
    	            	}
    	            case  R.id.b7: {
    	            	valor = "7";
    	                break;
    	            	}
    	            case  R.id.b8: {
    	            	valor = "8";
    	                break;
    	            	}
    	            case  R.id.b9: {
    	            	valor = "9";
    	                break;
    	            	}
    	        	}
    	            PrintWriter out = new PrintWriter(new BufferedWriter(
    	                    new OutputStreamWriter(socket.getOutputStream())),
    	                    true);
    	            out.println(valor);
    	        } catch (UnknownHostException e) {
    	            e.printStackTrace();
    	        } catch (IOException e) {
    	            e.printStackTrace();
    	        } catch (Exception e) {
    	            e.printStackTrace();
    	        }
    	    }
    class ClientThread implements Runnable {
    	        @Override
    	        public void run() {
    	            try {
    	                InetAddress serverAddr = InetAddress.getByName(SERVER_IP);
    	                socket = new Socket(serverAddr, SERVERPORT);
    	                socket.setReceiveBufferSize(10025);
    	                socket.setSendBufferSize(10025);
    	            } catch (UnknownHostException e1) {
    	                e1.printStackTrace();
    	            } catch (IOException e1) {
    	                e1.printStackTrace();
    	            }
    	        }
    	    }
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.test, menu);
        return true;
    }
    
}
