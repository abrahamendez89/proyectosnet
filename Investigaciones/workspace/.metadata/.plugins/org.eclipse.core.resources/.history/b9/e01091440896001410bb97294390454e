package com.example.karaokeapp;

import java.io.BufferedWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;

import android.os.Bundle;
import android.app.Activity;
import android.app.Application.ActivityLifecycleCallbacks;
import android.content.Context;
import android.view.Menu;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class Test extends Activity implements ActivityLifecycleCallbacks {
	private Socket socket;
	    private static final int SERVERPORT = 8888;
	    private static final String SERVER_IP = "192.168.1.52";
	    private String ipActual;
	    Activity mActivity;
	    TextView txt;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_test);
        
        String ipTemp = Utils.getIPAddress(true);
        int puntos = 0;
        ipActual = "";
        for(int i = 0; i < ipTemp.length(); i++)
        {
        	if(ipTemp.charAt(i) == '.')
        		puntos++;
        	ipActual += ipTemp.charAt(i);
        	if(puntos == 3)
        		break;
        }
        txt = (TextView) findViewById(R.id.mensaje);
        
        mActivity= this;
        
        new Thread(new BuscarServer()).start();

    }
    private Boolean encontrado = false;
    private String ipEcontrada = "";
    private String ipTemporal = "";
    class IntentarConectar implements Runnable 
    {
        @Override
        public void run() 
        {
	        String ip = (String)ipTemporal;
	        try
	        {
	        	InetAddress serverAddr = InetAddress.getByName(ip);
	            Socket socket = new Socket(serverAddr, 8889);
	            encontrado = true;
	            ipEcontrada = ip;
	        }
	        catch(Exception ex) 
	        { 
	        }
        }
    }
    class BuscarServer implements Runnable
    {
    	@Override
        public void run() 
    	{
    		Mensaje("Buscando...");
	        for (int i = 0; i <= 255; i++)
	        {
	        	ipTemporal = ipActual + i;
	        	Mensaje(ipTemporal);
	        	Thread intento = new Thread(new IntentarConectar());
	            try {
		            intento.start();
		            Thread.sleep(300);
				} catch (Exception e) {
					
				}
	            if (encontrado)
	            {
	                if(intento.isAlive())
	                    intento.interrupt();
	                try {
	                	ipTemporal = ipActual + (i);
    	                InetAddress serverAddr = InetAddress.getByName(ipEcontrada);
    	                socket = new Socket(serverAddr, 8888);
    	                socket.setReceiveBufferSize(10025);
    	                socket.setSendBufferSize(10025);
    	            } catch (Exception ex)
    	            {
    	            	Mensaje(ex.getMessage());
    	            }
	                Mensaje("Conexión exitosa!!");
	                return;
	            }
	                
	        }
	        Mensaje("No encontrado!!");
    	}
    }
    private String textT = "";
    public void Mensaje(String texto)
    {
    	textT = texto;
    	    mActivity.runOnUiThread(new Runnable() {
    	        public void run() {
    	            txt.setText(textT);
    	        }
    	    });
    }
    public void onClick(View view) {
    	        try {
    	        	String valor = "";
    	        	switch (view.getId()) {
    	            case  R.id.b1: {
    	            	valor = "1";
    	                break;
    	            	}
    	            case  R.id.b2: {
    	            	valor = "2";
    	                break;
    	            	}
    	            case  R.id.b3: {
    	            	valor = "3";
    	                break;
    	            	}
    	            case  R.id.b4: {
    	            	valor = "4";
    	                break;
    	            	}
    	            case  R.id.b5: {
    	            	valor = "5";
    	                break;
    	            	}
    	            case  R.id.b6: {
    	            	valor = "6";
    	                break;
    	            	}
    	            case  R.id.b7: {
    	            	valor = "7";
    	                break;
    	            	}
    	            case  R.id.b8: {
    	            	valor = "8";
    	                break;
    	            	}
    	            case  R.id.b9: {
    	            	valor = "9";
    	                break;
    	            	}
    	        	}
    	            PrintWriter out = new PrintWriter(new BufferedWriter(
    	                    new OutputStreamWriter(socket.getOutputStream())),
    	                    true);
    	            out.println(valor);
    	        } catch (UnknownHostException e) {
    	            e.printStackTrace();
    	        } catch (IOException e) {
    	            e.printStackTrace();
    	        } catch (Exception e) {
    	            e.printStackTrace();
    	        }
    	    }
    class ClientThread implements Runnable {
    	        @Override
    	        public void run() {
    	            try {
    	                InetAddress serverAddr = InetAddress.getByName(SERVER_IP);
    	                socket = new Socket(serverAddr, SERVERPORT);
    	                socket.setReceiveBufferSize(10025);
    	                socket.setSendBufferSize(10025);
    	            } catch (UnknownHostException e1) {
    	                e1.printStackTrace();
    	            } catch (IOException e1) {
    	                e1.printStackTrace();
    	            }
    	        }
    	    }
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.test, menu);
        return true;
    }
	@Override
	public void onActivityCreated(Activity arg0, Bundle arg1) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void onActivityDestroyed(Activity arg0) {
		try
		{
			PrintWriter out = new PrintWriter(new BufferedWriter(
	                new OutputStreamWriter(socket.getOutputStream())),
	                true);
	        out.println("E");
		}catch(Exception ex){}
		
	}
	@Override
	public void onActivityPaused(Activity arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void onActivityResumed(Activity arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void onActivitySaveInstanceState(Activity arg0, Bundle arg1) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void onActivityStarted(Activity arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void onActivityStopped(Activity activity) {
		// TODO Auto-generated method stub
		try
		{
			PrintWriter out = new PrintWriter(new BufferedWriter(
	                new OutputStreamWriter(socket.getOutputStream())),
	                true);
	        out.println("E");
		}catch(Exception ex){}
	}
    
}
